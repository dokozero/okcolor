"use strict";let t="fill",a,h=!1,o={hasFillStroke:{fill:!1,stroke:!1},colors:{fill:{rgba:[255,255,255,0]},stroke:{rgba:[255,255,255,0]}}};const S=["BOOLEAN_OPERATION","COMPONENT","ELLIPSE","FRAME","INSTANCE","LINE","POLYGON","RECTANGLE","STAR","TEXT","VECTOR","SHAPE_WITH_TEXT","HIGHLIGHT"],d=["fills","fillStyleId","strokes","strokeWeight"];figma.showUI(__html__,{width:240,height:346,themeColors:!0});const y=async function(){a=await figma.clientStorage.getAsync("currentColorModel"),a!=="okhsv"&&a!=="okhsl"&&a!=="oklch"&&(a="okhsl"),I(),k()&&(o.hasFillStroke.fill?t="fill":t="stroke",u(!0))},C=function(){o.hasFillStroke.fill=!1,o.hasFillStroke.stroke=!1,o.colors.fill.rgba=[255,255,255,0],o.colors.stroke.rgba=[255,255,255,0]},k=function(){var n,g;C();const e=figma.currentPage.selection;if(!e[0])return c("noSelection"),!1;for(const s of e)if(!S.includes(s.type))return c("notSupportedType",s.type),!1;const r=e[0].fills[0],l=e[0].strokes[0];if(!r&&!l)return c("noColorInShape"),!1;if((r==null?void 0:r.type)!=="SOLID"&&(l==null?void 0:l.type)!=="SOLID")return c("noSolidColor"),!1;if((r==null?void 0:r.type)==="SOLID"&&(o.hasFillStroke.fill=!0,o.colors.fill.rgba[0]=r.color.r*255,o.colors.fill.rgba[1]=r.color.g*255,o.colors.fill.rgba[2]=r.color.b*255,o.colors.fill.rgba[3]=Math.round(r.opacity*100)),(l==null?void 0:l.type)==="SOLID"&&(o.hasFillStroke.stroke=!0,o.colors.stroke.rgba[0]=l.color.r*255,o.colors.stroke.rgba[1]=l.color.g*255,o.colors.stroke.rgba[2]=l.color.b*255,o.colors.stroke.rgba[3]=Math.round(l.opacity*100)),e.length>1){let s=0,i=0;for(const f of e)((n=f.fills[0])==null?void 0:n.type)==="SOLID"&&s++,((g=f.strokes[0])==null?void 0:g.type)==="SOLID"&&i++;if(e.length!==s&&e.length!==i)return c("notAllShapesHaveFillOrStroke"),!1;i<s?o.hasFillStroke.stroke=!1:s<i&&(o.hasFillStroke.fill=!1)}return!0},I=function(){figma.ui.postMessage({message:"init",currentColorModel:a})},u=function(e=!1){figma.ui.postMessage({message:"newShapeColor",shapeInfos:o,currentFillOrStroke:t,shouldRenderColorPickerCanvas:e})},c=function(e,r=""){figma.ui.postMessage({message:"displayUIMessage",UIMessageCode:e,nodeType:r})};figma.on("selectionchange",()=>{t="fill",k()&&(t==="fill"&&!o.hasFillStroke.fill?t="stroke":t==="stroke"&&!o.hasFillStroke.stroke&&(t="fill"),u(!0))});figma.on("documentchange",e=>{if(h)return;if(e.documentChanges[0].type==="PROPERTY_CHANGE"){const l=e.documentChanges[0].properties[0];if(d.includes(l)){let n=Object.assign({},o.hasFillStroke);if(!k())return;if(JSON.stringify(n)!==JSON.stringify(o.hasFillStroke)){t==="fill"&&!o.hasFillStroke.fill?t="stroke":t==="stroke"&&!o.hasFillStroke.stroke&&(t="fill"),u(!0);return}t==="fill"&&l==="strokes"||t==="stroke"&&l==="fills"?u():u(!0)}}});let p;figma.ui.onmessage=e=>{if(e.type==="init")y();else if(e.type==="updateShapeColor"){h=!0;const r=e.newColor[0]/255,l=e.newColor[1]/255,n=e.newColor[2]/255,g=e.newColor[3]/100;let s;const i=t+"s";for(const f of figma.currentPage.selection)i in f&&(s=JSON.parse(JSON.stringify(f[i])),s[0].color.r=r,s[0].color.g=l,s[0].color.b=n,s[0].opacity=g,f[i]=s);p&&clearTimeout(p),p=setTimeout(()=>{h=!1},500)}else e.type==="syncCurrentFillOrStroke"?t=e.currentFillOrStroke:e.type==="syncCurrentColorModel"&&figma.clientStorage.setAsync("currentColorModel",e.currentColorModel)};
