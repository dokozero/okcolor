"use strict";let t="fill",u=!1,g={hasFillStroke:{fill:!1,stroke:!1},colors:{fill:{r:255,g:255,b:255,opacity:0},stroke:{r:255,g:255,b:255,opacity:0}}},e=JSON.parse(JSON.stringify(g));function h(){var p,n;e=JSON.parse(JSON.stringify(g));const l=["BOOLEAN_OPERATION","COMPONENT","ELLIPSE","FRAME","INSTANCE","LINE","POLYGON","RECTANGLE","STAR","TEXT","VECTOR"],s=figma.currentPage.selection;if(!s[0])return a("noSelection"),!1;for(const i of s)if(!l.includes(i.type))return a("notSupportedType",i.type),!1;const o=s[0].fills[0],r=s[0].strokes[0];if(!o&&!r)return a("noColorInShape"),!1;if((o==null?void 0:o.type)!=="SOLID"&&(r==null?void 0:r.type)!=="SOLID")return a("noSolidColor"),!1;if((o==null?void 0:o.type)==="SOLID"&&(e.hasFillStroke.fill=!0,e.colors.fill.r=o.color.r*255,e.colors.fill.g=o.color.g*255,e.colors.fill.b=o.color.b*255,e.colors.fill.opacity=Math.round(o.opacity*100)),(r==null?void 0:r.type)==="SOLID"&&(e.hasFillStroke.stroke=!0,e.colors.stroke.r=r.color.r*255,e.colors.stroke.g=r.color.g*255,e.colors.stroke.b=r.color.b*255,e.colors.stroke.opacity=Math.round(r.opacity*100)),s.length>1){let i=0,f=0;for(const S of s)((p=S.fills[0])==null?void 0:p.type)==="SOLID"&&i++,((n=S.strokes[0])==null?void 0:n.type)==="SOLID"&&f++;if(s.length!==i&&s.length!==f)return a("notAllShapesHaveFillOrStroke"),!1;f<i?e.hasFillStroke.stroke=!1:i<f&&(e.hasFillStroke.fill=!1)}return!0}function c(l=!1){figma.ui.postMessage({shapeInfos:e,currentFillOrStroke:t,shouldRenderColorPickerCanvas:l,message:"new shape color"})}function a(l,s=""){figma.ui.postMessage({message:"Display UI Message",UIMessageCode:l,nodeType:s})}figma.showUI(__html__,{width:240,height:346,themeColors:!0});function k(){h()&&(e.hasFillStroke.fill?t="fill":t="stroke",c(!0))}k();figma.on("selectionchange",()=>{h()&&(t=="fill"&&!e.hasFillStroke.fill?t="stroke":t=="stroke"&&!e.hasFillStroke.stroke&&(t="fill"),c(!0))});figma.on("documentchange",l=>{if(l.documentChanges[0].type=="PROPERTY_CHANGE"&&!u){const o=l.documentChanges[0].properties[0];if(o=="fills"||o=="strokes"){let r=Object.assign({},e.hasFillStroke);if(!h())return;if(JSON.stringify(r)!==JSON.stringify(e.hasFillStroke)){t=="fill"&&!e.hasFillStroke.fill?t="stroke":t=="stroke"&&!e.hasFillStroke.stroke&&(t="fill"),c(!0);return}t=="fill"&&o=="strokes"||t=="stroke"&&o=="fills"?c():c(!0)}}u&&(u=!1)});figma.ui.onmessage=l=>{if(l.type=="Update shape color"){u=!0;const s=l.newColor.r/255,o=l.newColor.g/255,r=l.newColor.b/255,p=l.newColor.opacity/100;let n;const i=t+"s";for(const f of figma.currentPage.selection)i in f&&(n=JSON.parse(JSON.stringify(f[i])),n[0].color.r=s,n[0].color.g=o,n[0].color.b=r,n[0].opacity=p,f[i]=n)}else l.type=="Sync currentFillOrStroke"&&(t=l.currentFillOrStroke)};
