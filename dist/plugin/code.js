"use strict";let r="fill",a=!1,g={hasFillStroke:{fill:!1,stroke:!1},colors:{fill:{r:255,g:255,b:255,opacity:0},stroke:{r:255,g:255,b:255,opacity:0}}},l=JSON.parse(JSON.stringify(g));function c(){var p,u;l=JSON.parse(JSON.stringify(g));let t=["CODE_BLOCK","COMPONENT_SET","CONNECTOR","DOCUMENT","EMBED","GROUP","LINK_UNFURL","MEDIA","PAGE","SHAPE_WITH_TEXT","SLICE","STAMP","STICKY","WIDGET"];const o=figma.currentPage.selection;if(!o[0])return f("noSelection"),!1;for(const i of o)if(t.includes(i.type))return f("notSupportedType",i.type),!1;const e=o[0].fills[0],s=o[0].strokes[0];if(!e&&!s)return f("noColorInShape"),!1;if((e==null?void 0:e.type)!=="SOLID"&&(s==null?void 0:s.type)!=="SOLID")return f("noSolidColor"),!1;if((e==null?void 0:e.type)==="SOLID"&&(l.hasFillStroke.fill=!0,l.colors.fill.r=e.color.r*255,l.colors.fill.g=e.color.g*255,l.colors.fill.b=e.color.b*255,l.colors.fill.opacity=Math.round(e.opacity*100)),(s==null?void 0:s.type)==="SOLID"&&(l.hasFillStroke.stroke=!0,l.colors.stroke.r=s.color.r*255,l.colors.stroke.g=s.color.g*255,l.colors.stroke.b=s.color.b*255,l.colors.stroke.opacity=Math.round(s.opacity*100)),o.length>1){let i=0,S=0;for(const k of o)((p=k.fills[0])==null?void 0:p.type)==="SOLID"&&i++,((u=k.strokes[0])==null?void 0:u.type)==="SOLID"&&S++;if(o.length!==i&&o.length!==S)return f("notAllShapesHaveFillOrStroke"),!1}return!0}function n(t=!1){figma.ui.postMessage({shapeInfos:l,currentFillOrStroke:r,shouldRenderColorPickerCanvas:t,message:"new shape color"})}function f(t,o=""){figma.ui.postMessage({message:"Display UI Message",UIMessageCode:t,nodeType:o})}figma.showUI(__html__,{width:240,height:346,themeColors:!0});function h(){c()&&(l.hasFillStroke.fill?r="fill":r="stroke",n(!0))}h();figma.on("selectionchange",()=>{c()&&(r=="fill"&&!l.hasFillStroke.fill?r="stroke":r=="stroke"&&!l.hasFillStroke.stroke&&(r="fill"),n(!0))});figma.on("documentchange",t=>{if(t.documentChanges[0].type=="PROPERTY_CHANGE"&&!a){const e=t.documentChanges[0].properties[0];if(e=="fills"||e=="strokes"){let s=Object.assign({},l.hasFillStroke);if(!c())return;if(JSON.stringify(s)!==JSON.stringify(l.hasFillStroke)){r=="fill"&&!l.hasFillStroke.fill?r="stroke":r=="stroke"&&!l.hasFillStroke.stroke&&(r="fill"),n(!0);return}r=="fill"&&e=="strokes"||r=="stroke"&&e=="fills"?n():n(!0)}}a&&(a=!1)});figma.ui.onmessage=t=>{if(t.type=="Update shape color"){a=!0;for(const o of figma.currentPage.selection){let e;"fills"in o&&r=="fill"?e=JSON.parse(JSON.stringify(o.fills)):"strokes"in o&&r=="stroke"&&(e=JSON.parse(JSON.stringify(o.strokes))),e[0].color.r=t.newColor.r/255,e[0].color.g=t.newColor.g/255,e[0].color.b=t.newColor.b/255,e[0].opacity=t.newColor.opacity/100,"fills"in o&&r=="fill"?o.fills=e:"strokes"in o&&r=="stroke"&&(o.strokes=e)}}else t.type=="Sync currentFillOrStroke"&&(r=t.currentFillOrStroke)};
